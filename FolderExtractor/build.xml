<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="build" name="FileExtractor">

	<property name="src.dir" location="src"/>
	<property name="test.dir" location="markmann.dennis.fileExtractor.tests.logic"/>
	<property name="build.dir" location="build"/>
	<property name="reports.dir" location="reports"/>

	<target name="build" description="Create a runnable jar file for the project and copies needed ressources.">
		<mkdir dir="${build.dir}" />
		<jar destfile="${build.dir}/FileExtractor.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="markmann.dennis.fileExtractor.logic.StartUp" />
				<attribute name="Class-Path" value="." />
			</manifest>
			<fileset dir="./target/classes">
				<exclude name="*FileExtractor.jar" />
				<exclude name="*.zip" />
				<exclude name="*.log" />
				<exclude name="*.xml" />
			</fileset>
			<zipfileset excludes="META-INF/*.SF" src="./lib/log4j-1.2.17.jar" />
			<zipfileset excludes="META-INF/*.SF" src="./lib/MyLibraries.jar" />
		</jar>
		<copy todir="${build.dir}/Settings">
			<fileset dir="./Settings" />
		</copy>
		<copy todir="${build.dir}/Icons">
			<fileset dir="./Icons" />
		</copy>
	</target>

	<target name="zip" description="Creates a zip file including the build files.">
		<zip destfile="./${build.dir}/release.zip">
			<fileset dir="${build.dir}">
				<exclude name="*.zip" />
			</fileset>
		</zip>
	</target>

	<target name="clean build" description="Deletes the created build files for the project.">
		<delete>
			<fileset dir="${build.dir}" includes="**/*" />
		</delete>
	</target>

	<target name="unit-tests" depends="build">
		<mkdir dir="${reports.dir}"/>

		<junit printsummary="yes" haltonfailure="no">
			<classpath location="lib/junit-4.12.jar"/>
			<classpath location="lib/hamcrest-core-1.3.jar"/>
			<!-- test class -->
			<classpath location="${build.dir}" />

			<formatter type="plain" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>
